# Generated by Django 4.2.1 on 2024-03-30 06:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('lawyer', 'Lawyer'), ('student', 'Student'), ('client', 'Client')], default='client', max_length=10)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(default='', max_length=254, unique=True)),
                ('first_name', models.CharField(default='', max_length=30)),
                ('last_name', models.CharField(default='', max_length=30)),
                ('address', models.TextField(blank=True, default='')),
                ('dob', models.DateField(blank=True, default='2000-01-01')),
                ('pin', models.CharField(blank=True, default='', max_length=6)),
                ('state', models.CharField(blank=True, choices=[('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chhattisgarh', 'Chhattisgarh'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal'), ('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Chandigarh', 'Chandigarh'), ('Dadra and Nagar Haveli and Daman and Diu', 'Dadra and Nagar Haveli and Daman and Diu'), ('Lakshadweep', 'Lakshadweep'), ('Delhi', 'Delhi'), ('Puducherry', 'Puducherry')], max_length=50)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('appointment_date', models.DateField()),
                ('time_slot', models.CharField(max_length=20)),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_number', models.CharField(max_length=10, unique=True)),
                ('client_name', models.CharField(blank=True, max_length=100)),
                ('client_email', models.EmailField(blank=True, max_length=254)),
                ('client_phone', models.CharField(blank=True, max_length=15)),
                ('client_adhar', models.CharField(max_length=12)),
                ('client_adhar_photo', models.ImageField(blank=True, null=True, upload_to='aadhar_photos/')),
                ('incident_place', models.CharField(max_length=100)),
                ('incident_date', models.DateField()),
                ('incident_time', models.TimeField()),
                ('witness_name', models.CharField(blank=True, max_length=100)),
                ('witness_details', models.TextField(blank=True)),
                ('incident_description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=10)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CaseTracking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('posted_date', models.DateTimeField(auto_now_add=True)),
                ('activity', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('amount', models.IntegerField(default=10)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_tracking', to='accounts.case')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='certificates/')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('min_cgpa', models.DecimalField(decimal_places=2, max_digits=3)),
                ('start_date', models.DateField()),
                ('duration', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('roles', models.TextField(help_text='Enter roles as bullet points (one per line)')),
                ('image', models.ImageField(null=True, upload_to='internship_images/')),
            ],
        ),
        migrations.CreateModel(
            name='LawyerProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('specialization', models.CharField(blank=True, choices=[('family', 'Family Lawyer'), ('criminal', 'Criminal Lawyer'), ('consumer', 'Consumer Lawyer'), ('coperatelawyer', 'Coperate Lawyer'), ('civilrightlawyer', 'Civil Right Lawyer'), ('divorcelawyer', 'Divorce Lawyer')], max_length=20)),
                ('start_date', models.DateField(null=True)),
                ('profile_picture', models.ImageField(blank=True, default='uploads/default_profile_picture.png', null=True, upload_to='uploads/')),
                ('license_no', models.CharField(max_length=30)),
                ('cases_won', models.IntegerField(blank=True, null=True)),
                ('cases_lost', models.IntegerField(blank=True, null=True)),
                ('total_cases_handeled', models.IntegerField(blank=True, null=True)),
                ('currendly_handling', models.IntegerField(blank=True, null=True)),
                ('experience', models.IntegerField(blank=True, null=True)),
                ('court', models.CharField(blank=True, choices=[('jfcmcchangancherry', 'Judicial First Class Magistrate Court  Changancherry'), ('munsiff', 'Munsiff Court Changancherry'), ('jfcmcKanjirapally', 'Judicial First Class Magistrate Court  Kanjirapally'), ('munsifcourtkanjirapally', 'Munsiff Court Kanjirapally'), ('districtcourtkottayam', 'District Court Kottayam'), ('highcourtkochi', 'High Court Kochi')], max_length=200)),
                ('time_update', models.DateTimeField(blank=True, null=True)),
                ('additional_qualification', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_qualification_documents', models.FileField(blank=True, null=True, upload_to='')),
                ('certificates', models.ManyToManyField(blank=True, to='accounts.certificate')),
                ('locations', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lawyer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('course', models.CharField(blank=True, max_length=100)),
                ('course_place', models.CharField(blank=True, max_length=100)),
                ('duration_of_course', models.CharField(blank=True, max_length=20)),
                ('specialization', models.CharField(blank=True, choices=[('family', 'Family Lawyer'), ('criminal', 'Criminal Lawyer'), ('consumer', 'Consumer Lawyer'), ('corporate', 'Corporate Lawyer'), ('civilrights', 'Civil Rights Lawyer'), ('divorce', 'Divorce Lawyer')], max_length=50, null=True)),
                ('year_of_pass', models.CharField(blank=True, choices=[('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=50, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('experience', models.TextField(blank=True, null=True)),
                ('adhaar_no', models.CharField(blank=True, max_length=12, unique=True)),
                ('adhaar_pic', models.ImageField(blank=True, null=True, upload_to='student_uploads/')),
                ('is_approved', models.BooleanField(default=False)),
                ('lawyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.lawyerprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkAssignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('deadline_date', models.DateField()),
                ('charge_fine', models.BooleanField(default=False)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.case')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='TrackerPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=20)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=200, null=True)),
                ('casetracker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.casetracking')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrackerNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('casetracking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.casetracking')),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.lawyerprofile')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.trackerpayment')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.lawyerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('lawyers', models.ManyToManyField(blank=True, related_name='working_slots', to='accounts.lawyerprofile')),
            ],
            options={
                'unique_together': {('day', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('files', models.FileField(blank=True, null=True, upload_to='task_files/')),
                ('note', models.TextField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
                ('work_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.workassignment')),
            ],
        ),
        migrations.CreateModel(
            name='StudentPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=20)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=200, null=True)),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.internship')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('not_paid', 'Not Paid')], default='not_paid', max_length=20)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
                ('work_assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.workassignment')),
            ],
        ),
        migrations.AddField(
            model_name='lawyerprofile',
            name='working_hours',
            field=models.ManyToManyField(blank=True, to='accounts.timeslot'),
        ),
        migrations.CreateModel(
            name='LawyerDayOff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.lawyerprofile')),
            ],
        ),
        migrations.AddField(
            model_name='internship',
            name='lawyer_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internships', to='accounts.lawyerprofile'),
        ),
        migrations.CreateModel(
            name='HolidayRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('type', models.CharField(choices=[('dutyleave', 'Duty Leave'), ('casual_leave', 'Casual Leave')], max_length=20)),
                ('timing', models.CharField(choices=[('full_day', 'Full Day'), ('half_day', 'Half Day')], default='full_day', max_length=10)),
                ('reason', models.TextField()),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='supporting_documents/')),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=20)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=200, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
                ('workassignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.workassignment')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_text', models.TextField()),
                ('sentiment', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('threshold', models.FloatField()),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.case')),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.lawyerprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_number', models.CharField(max_length=10)),
                ('client_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phnno', models.CharField(max_length=15)),
                ('incident_description', models.TextField()),
                ('incident_place', models.CharField(max_length=100)),
                ('incident_date', models.DateField()),
                ('incident_time', models.TimeField()),
                ('witness_name', models.CharField(blank=True, max_length=100)),
                ('witness_details', models.TextField(blank=True)),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_cases', to='accounts.lawyerprofile')),
            ],
        ),
        migrations.AddField(
            model_name='case',
            name='lawyer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='accounts.lawyerprofile'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='lawyer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lawyer', to='accounts.lawyerprofile'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.internship')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
            ],
        ),
    ]
